{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-68777a3c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", {\n  class: \"mt-5\"\n}, \"History\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.winner ? (_openBlock(), _createElementBlock(\"h2\", _hoisted_2, \"Winner: \" + _toDisplayString($setup.winner), 1 /* TEXT */)) : (_openBlock(), _createElementBlock(\"h2\", _hoisted_3, \"Players: \" + _toDisplayString($setup.player), 1 /* TEXT */)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $setup.reset && $setup.reset(...args)),\n    class: \"btn btn-success mb-3\"\n  }, \" Reset \"), (_openBlock(), _createElementBlock(_Fragment, null, _renderList(3, (_, x) => {\n    return _createElementVNode(\"div\", {\n      key: x,\n      class: \"row\"\n    }, [(_openBlock(), _createElementBlock(_Fragment, null, _renderList(3, (_, y) => {\n      return _createElementVNode(\"button\", {\n        key: y,\n        class: \"square\",\n        onClick: $event => $setup.move(x, y)\n      }, _toDisplayString($setup.squares[x][y]), 9 /* TEXT, PROPS */, _hoisted_4);\n    }), 64 /* STABLE_FRAGMENT */))]);\n  }), 64 /* STABLE_FRAGMENT */)), _hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.history, (game, idx) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: idx\n    }, \" Game \" + _toDisplayString(idx + 1) + \": \" + _toDisplayString(game) + \" won \", 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;;EACQA,KAAK,EAAC;AAAW;;;;;;;;gEAYzBC,oBAA6B;EAAzBD,KAAK,EAAC;AAAM,GAAC,SAAO;;;uBAZrBE,oBAgBM,OAhBNC,UAgBM,GAfCC,aAAM,kBAAhBF,oBAAyC,kBAAvB,UAAQ,oBAAEE,aAAM,mCAClCF,oBAAmC,kBAAxB,WAAS,oBAAEE,aAAM,mBAC5BH,oBAES;IAFAI,OAAK,yCAAED,qCAAK;IAAEJ,KAAK,EAAC;KAAuB,SAEpD,kBAEAE,oBAIMI,6BAJgB,CAAC,GAAVC,CAAC,EAAEC,CAAC;WAAjBP,oBAIM;MAJoBQ,GAAG,EAAED,CAAC;MAAER,KAAK,EAAC;uBACxCE,oBAESI,6BAFgB,CAAC,GAAVC,CAAC,EAAEG,CAAC;aAApBT,oBAES;QAFoBQ,GAAG,EAAEC,CAAC;QAAEV,KAAK,EAAC,QAAQ;QAAEK,OAAK,YAAED,WAAI,CAACI,CAAC,EAACE,CAAC;0BAC7DN,cAAO,CAACI,CAAC,EAAEE,CAAC;;kCAGnBC,UAA6B,qBAC7BT,oBAEMI,6BAFqBF,cAAO,GAArBQ,IAAI,EAAEC,GAAG;yBAAtBX,oBAEM;MAF+BO,GAAG,EAAEI;IAAG,GAAE,QACtC,oBAAEA,GAAG,QAAM,IAAE,oBAAED,IAAI,IAAE,OAC9B","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","$setup","onClick","_Fragment","_","x","key","y","_hoisted_5","game","idx"],"sourceRoot":"","sources":["/Users/sofiasobko/Downloads/peek-a-vue-000-start/src/components/Haha.vue"],"sourcesContent":["<template>\n   <div class=\"container\">\n<h2 v-if=\"winner\">Winner: {{winner}}</h2>\n<h2 v-else>Players: {{player}}</h2>\n<button @click=\"reset\" class=\"btn btn-success mb-3\">\n    Reset\n</button>\n\n<div v-for=\"(_, x) in 3\" :key=\"x\" class=\"row\">\n<button v-for=\"(_, y) in 3\" :key=\"y\" class=\"square\" @click=\"move(x,y)\">\n    {{ squares[x][y] }}\n</button>\n</div>\n<h2 class=\"mt-5\">History</h2>\n<div v-for=\"(game, idx) in history\" :key=\"idx\">\n    Game {{idx + 1}}: {{game}} won\n</div>\n   </div>\n   \n</template>\n\n<script>\n    import {computed, ref, watch, onMounted} from 'vue'\n\nconst calculateWinner = squares =>{\nconst lines = [\n[0,1,2],\n[3,4,5],\n[6,7,8],\n[0,3,6],\n[1,4,7],\n[2,5,8],\n[0,4,8],\n[2,4,6]\n]\nfor (let i = 0; i < lines.length; i++){\n    const [a,b,c] = lines[i]\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\n        return squares[a]\n    }\n}\nreturn null\n    }\n\n    export default{\n        setup(){\n            const player = ref('X')\n            const squares = ref([\n                ['','',''],\n                ['','',''],\n                ['','','']\n            ])\n            const winner = computed(() => calculateWinner(squares.value.flat()))\n\n            const move = (x, y) => {\n                if (winner.value) return\n                squares.value[x][y] = player.value\n                player.value = player.value === 'O' ? 'X' : 'O'\n            }\n            const reset = () => {\n             player.value = 'X'\n             squares.value = [\n                ['','',''],\n                ['','',''],\n                ['','','']\n            ]\n            }\n\n            const history = ref([])\n            watch(winner, (current, previous) => {\n                if (current && !previous){\n                    history.value.push(current)\n                    localStorage.setItem('history', JSON.stringify(history.value))\n                }\n            })\n        \n            onMounted(() =>{\n                history.value = JSON.parse(localStorage.getItem('history')) ?? []\n            })\n\n            return {winner, player, squares, move, reset, history}\n        }\n    }\n \n</script>\n\n<style scoped>\n.square {\n  background: #fff;\n  border: 1px solid #999;\n  float: left;\n  font-size: 70px;\n  font-weight: bold;\n  line-height: 34px;\n  height: 100px;\n  margin-right: -1px;\n  margin-top: -1px;\n  padding: 0;\n  text-align: center;\n  width: 100px;\n}\n</style>\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}