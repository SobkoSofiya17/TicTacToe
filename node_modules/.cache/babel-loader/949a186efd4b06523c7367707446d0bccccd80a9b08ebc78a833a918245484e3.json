{"ast":null,"code":"import { ref, reactive, toRefs } from 'vue';\nexport default {\n  setup() {\n    let number = 1;\n    const refNumber = ref(1);\n    const reactiveNumber = reactive({\n      count: 1\n    });\n    const {\n      count\n    } = toRefs(reactiveNumber);\n    setInterval(() => {\n      number += 1;\n      refNumber.value += 1;\n      reactiveNumber.count += 1;\n      count;\n      // удалить\n    }, 1000);\n    return {\n      number,\n      refNumber,\n      reactiveNumber\n    };\n  }\n};","map":{"version":3,"mappings":"AAQI,SAAQA,GAAG,EAAEC,QAAQ,EAAEC,MAAM,QAAO,KAAI;AACxC,eAAc;EACVC,KAAK,GAAE;IACf,IAAIC,MAAK,GAAI;IACb,MAAMC,SAAQ,GAAIL,GAAG,CAAC,CAAC;IACvB,MAAMM,cAAa,GAAIL,QAAQ,CAAC;MAACM,KAAK,EAAC;IAAC,CAAC;IACzC,MAAM;MAAEA;IAAM,IAAIL,MAAM,CAACI,cAAc;IAEvCE,WAAW,CAAC,MAAM;MACdJ,MAAK,IAAK;MACVC,SAAS,CAACI,KAAI,IAAK;MACnBH,cAAc,CAACC,KAAI,IAAK;MACxBA,KAAI;MACJ;IACJ,CAAC,EAAE,IAAI;IAEP,OAAO;MAACH,MAAM;MAAEC,SAAS;MAAEC;IAAc;EACjC;AACJ","names":["ref","reactive","toRefs","setup","number","refNumber","reactiveNumber","count","setInterval","value"],"sourceRoot":"","sources":["/Users/sofiasobko/Downloads/peek-a-vue-000-start/src/components/Haha.vue"],"sourcesContent":["<template>\n    <h1>Hahshshhshhs</h1>\n    <div>No Ref: {{ number + 1 }}</div>\n    <div>Ref: {{ refNumber }}</div>\n    <div>Reacive: {{ reactiveNumber }}</div>\n</template>\n\n<script>\n    import {ref, reactive, toRefs} from 'vue'\n    export default{\n        setup(){\nlet number = 1\nconst refNumber = ref(1)\nconst reactiveNumber = reactive({count:1})\nconst { count } = toRefs(reactiveNumber)\n\nsetInterval(() => {\n    number += 1\n    refNumber.value += 1\n    reactiveNumber.count += 1\n    count\n    // удалить\n}, 1000)\n\nreturn {number, refNumber, reactiveNumber}\n        }\n    }\n</script>\n\n<!-- <script>\n    import {ref, reactive, toRefs} from 'vue'\n    export default{\n        setup(){\nlet number = 1\nconst refNumber = ref(1)\nconst reactiveNumber = reactive({count:1})\nconst { count } = toRefs(reactiveNumber)\n\nsetInterval(() => {\n    number += 1\n    refNumber.value += 1\n    reactiveNumber.count += 1\n    count\n    // удалить\n}, 1000)\n\nreturn {number, refNumber, reactiveNumber}\n        }\n    }\n</script> -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}